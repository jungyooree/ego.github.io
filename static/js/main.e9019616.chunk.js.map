{"version":3,"sources":["data/products.js","Main.js","Cart.js","Footer.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","size","info","CardComp","props","history","useHistory","className","onClick","push","item","Card","style","width","cursor","Img","variant","src","Body","Title","Text","toLocaleString","Button","Main","useState","isLoading","setLoading","Jumbotron","arr","i","items","length","getCardComp","cntClickMore","axios","get","then","result","cnt","setCntClickMore","data","setItems","catch","err","console","log","connect","store","state","reducerCart","Table","responsive","map","x","class","parseInt","name","quan","dispatch","type","payload","Footer","Detail","lazy","App","products","stock","Navbar","bg","Container","Brand","as","Link","to","Nav","exact","path","fallback","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","dataCart","createStore","combineReducers","action","arrNew","matchedData","undefined","find","filter","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e9019616.chunk.js","sourcesContent":["export default [\r\n    {\r\n      id : 0,\r\n      title : '오리지널 덴스 후디',\r\n      content : '[프로스펙스X덴스]',\r\n      price : 73700,\r\n      size : [95,100],\r\n      info : ` <Table striped bordered hover variant=\"dark\">\r\n              <thead>\r\n                  <tr>\r\n                  <th>제품소재</th>\r\n                  <th>겉감 : 폴리에스터100% / 안감 : 폴리에스터100%</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n                  <tr>\r\n                  <td>색상</td>\r\n                  <td>Gray</td>\r\n                  </tr>\r\n                  <tr>\r\n                  <td>치수 (단위 : cm)</td>\r\n                  <td>90, 95</td>\r\n                  </tr>\r\n                  <tr>\r\n                  <td>제조사</td>\r\n                  <td>㈜LS네트웍스</td>\r\n                  </tr>\r\n                  <tr>\r\n                  <td>세탁방법 및 취급시 주의사항</td>\r\n                  <td>제품 라벨(Label) 및 태그(Tag) 참조</td>\r\n                  </tr>\r\n                  <tr>\r\n                  <td>제조국</td>\r\n                  <td>인도네시아</td>\r\n                  </tr>\r\n              </tbody>\r\n              </Table>`\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : '오리지널 덴스 맨투맨',\r\n      content : '[프로스펙스X덴스]',\r\n      price : 63700,\r\n      size : [95,100],\r\n      info:''\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : '오리지널 클래식 여성 원피스',\r\n      content : '[오리지널 라인]',\r\n      price : 57800,\r\n      size : [95,100],\r\n      info:''\r\n    }\r\n  ] \r\n\r\n","import React, {useState} from 'react';\r\nimport {Navbar,Container, Nav, Button, Jumbotron,Card , Carousel} from 'react-bootstrap';\r\nimport axios from 'axios'; //ajax 요청 라이브러리-- 더보기 기능\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction Main(props) {\r\n    let [isLoading, setLoading] = useState(false)\r\n\r\n    let getCardComp = () => {\r\n        let arr = []\r\n        for (let i = 0; i < props.items.length; i++) {\r\n          arr.push( <CardComp item = {props.items[i]}   key = {i}  /> )\r\n        }\r\n        return arr\r\n      }\r\n\r\n      //더보기기능- 서버에 ajax 요청\r\n    let onMore = () =>{\r\n        setLoading(true)\r\n\r\n        axios.get('https://jungyooree.github.io/data'+ (props.cntClickMore + 2) + '.json') \r\n        .then((result)=>{ \r\n\r\n          let cnt =props.cntClickMore;\r\n          props.setCntClickMore(cnt+1)\r\n\r\n            //서버에서 get한 데이터를 state에 add\r\n            let arr = [...props.items, ...result.data]\r\n            props.setItems(arr)\r\n\r\n            \r\n            setLoading(false)\r\n        })\r\n        .catch((err) =>{ \r\n            console.log('ajax get 요청 실패', err)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Jumbotron className='Jumbotron'></Jumbotron>\r\n            \r\n            <div className='container'>\r\n                <div className='row'>\r\n                { getCardComp() }\r\n                </div>\r\n                { \r\n                  \r\n                  props.cntClickMore < 2 \r\n                  ? <button className=\"btn btn-primary mb-5\" onClick = {onMore}>{isLoading ? 'Loading…' : '더보기'}</button>\r\n                  : null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction CardComp(props) {\r\n    let history = useHistory()\r\n    return (\r\n      <div className='col-md-4 mb-5' onClick={()=>{history.push('/detail/'+ props.item.id)}}>\r\n        <Card style={{ width: '18rem', cursor:'pointer'}}>\r\n          <Card.Img variant=\"top\" src= {'https://jungyooree.github.io/item'+ (props.item.id + 1) +'.jpg'} />\r\n          <Card.Body>\r\n            <Card.Title>{props.item.title}</Card.Title>\r\n            <Card.Text>{props.item.content}</Card.Text>\r\n            <Card.Text>{props.item.price.toLocaleString()}</Card.Text>\r\n            <Button >Go somewhere</Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\nexport default Main\r\n","import React from 'react';\r\nimport {Table, Button} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Cart(props) {\r\n    return (\r\n        <div>\r\n              <Table responsive>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>상품명</th>\r\n                    <th>사이즈</th>\r\n                    <th>수량</th>\r\n                    <th>변경</th>\r\n                    <th>삭제</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                { \r\n                    props.state.map((x,i)=>{\r\n                        return (\r\n                            <tr key={x+i}>\r\n                                <td>{x.id}</td>\r\n                                <td><div><img  class=\"img-thumbnail\" src={'https://jungyooree.github.io/item' + (parseInt(x.id) + 1) + '.jpg' } width='40px'/><span>{x.name}</span></div></td>\r\n                                <td>{x.size}</td>\r\n                                <td>{x.quan}</td>\r\n                                <td>\r\n                                    <Button variant=\"outline-dark\" onClick={ ()=>{ props.dispatch( {type:'수량증가', payload:{id:x.id, size:x.size}} ) }}>+</Button>&nbsp;\r\n                                    <Button variant=\"outline-dark\" onClick={ ()=>{ props.dispatch( {type:'수량감소', payload:{id:x.id, size:x.size}} ) }}>-</Button>\r\n                                </td>          \r\n                                <td>\r\n                                    <Button variant=\"dark\" onClick={ ()=>{ props.dispatch( {type:'삭제', payload:{id:x.id, size:x.size}} ) }}>x</Button>\r\n                                </td>             \r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n                    \r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction makeProps(store){\r\n    return { \r\n        state : store.reducerCart\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(makeProps)(Cart);\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className='Footer'>\r\n        <p>\r\n          ㈜LS네트웍스 | 대표이사 : 구대표 | 사업자등록번호:000-000-0000<br/>\r\n          통신판매업 신고번호 : 2016-경남김해-0229<br/>\r\n          경상남도 김해시 호계로 428, 1층(부원동) 개인정보관리 책임자 : 예책임 <br/><br/>\r\n  \r\n          고객님께서 안전거래를 위해 현금 등으로 결제하신 경우,<br/>\r\n          저희 쇼핑몰에서 가입한 소비자피해보상보험 서비스를 이용하실 수 있습니다.<br/><br/>\r\n  \r\n          COPYLEFT(c) LS NETWORKS CO. ALL RIGHTS RESERVED.<br/>\r\n        </p>\r\n        \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","/* eslint-disable*/ \nimport {Navbar,Container, Nav, Button,Jumbotron,Card } from 'react-bootstrap';\nimport React, {useState, lazy, Suspense} from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport products from './data/products.js';\nimport Main from './Main.js';\n//import Detail from './Detail.js';\nlet Detail = lazy( ()=>{ return import('./Detail.js') } ); // lazy loading\nimport Cart from './Cart.js';\nimport Footer from './Footer';\nimport './App.css';\n\nfunction App() {\n  let [items, setItems] = useState(products)\n  let [stock, setStock] = useState([10,20,30])\n  let [cntClickMore,setCntClickMore] = useState(0) //더보기버튼 누룬 횟수\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n        <Navbar.Brand as = {Link} to ='/'>LSmall</Navbar.Brand>\n        <Nav className=\"me-auto\">\n          <Nav.Link as = {Link} to ='/'>Home</Nav.Link>\n          <Nav.Link as = {Link} to ='/cart'>Cart</Nav.Link>\n          <Nav.Link as = {Link} to ='/detail/0'>Detail</Nav.Link>\n        </Nav>\n        </Container>\n      </Navbar>\n\n      <Switch> {/* Switch :경로중복 방지..하나만 보여준다 */}\n        <Route exact path='/'>  {/* Route :페이지 나누기 */}\n          <Main items = {items} setItems ={setItems} cntClickMore = {cntClickMore} setCntClickMore={setCntClickMore}/>\n        </Route>\n        <Route path='/detail/:id'>\n          <Suspense fallback={<div>로딩중입니다.</div>}>\n            <Detail items = {items} stock = {stock} />\n          </Suspense>\n        </Route>\n        <Route path='/cart'>\n          <Cart />\n        </Route>\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n//data - cart\n\nlet dataCart =  [ {id : 0, name:'오리지널 덴스 후디', quan:1, size:95}\n                  ,{id : 1, name:'오리지널 덴스 맨투맨', quan:1, size:95}\n                ]\n\nfunction reducerCart(data = dataCart, action) {\n  console.log(action.payload)\n  let arrNew = [...data]\n  let payload = action.payload\n  let matchedData =  payload !== undefined && arrNew.find((x)=> { return  parseInt(x.id) === parseInt(payload.id) && parseInt(x.size) === parseInt(payload.size) })\n\n  if (action.type === '수량증가') {\n    matchedData.quan++;\n  }else if (action.type === '수량감소') {\n    matchedData.quan >  1 && matchedData.quan--;\n  }else if (action.type === '삭제') {\n    return arrNew.filter((x)=>{ return !(x.id == parseInt(payload.id) && x.size == parseInt(payload.size)) })\n  }else if (action.type === '장바구니담기') {\n    \n    if(matchedData == undefined)\n      arrNew.push(payload) //추가\n    else\n      matchedData.quan++; //같은 아이디가 있으면 quan만 증가 \n  }\n  return arrNew\n}\n\n\nlet store = createStore(combineReducers({reducerCart}))\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}