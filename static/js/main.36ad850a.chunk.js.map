{"version":3,"sources":["data/products.js","img/carousel1.png","img/carousel2.png","Main.js","Cart.js","dateTimeFormat.js","Order.js","Result.js","Footer.js","Posts.js","PostsPagination.js","OrderList.js","SearchOrder.js","Login.js","Review.js","ReviewList.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","size","info","CardComp","props","history","useHistory","className","onClick","push","item","Card","style","width","cursor","margin","Img","variant","src","Body","Title","Text","toLocaleString","Main","useState","isLoading","setLoading","Carousel","Item","interval","height","img_carousel1","alt","img_carousel2","arr","i","items","length","getCardComp","cntClickMore","axios","get","then","result","cnt","setCntClickMore","data","setItems","catch","err","console","log","connect","store","stateCart","reducerCart","stateTemp","reducerTemp","totOrderPrice","useEffect","dispatch","type","Table","responsive","colSpan","map","x","quanPrice","class","parseInt","name","quan","Button","payload","obj","dateTimeFormat","date","Date","year","getFullYear","toString","month","getMonth","day","getDate","hour","getHours","minites","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","dt","strBank","orderName","tel","address","bank","objFormInfo","setFormInfo","payOpt","setPayOpt","IMP","window","init","currUser","uid","user","uname","displayName","onSaveOrderItems","ranNum","orderNum","onSaveOrderInfo","objImpRst","seq","paied","결과코드","totPrice","yyyyMMddhhmmss_dash","payCode","cardResultCode","카드승인번호","initCartState","savePayAndOrderResultInfo","resultMsg","alert","JSON","parse","주문번호","changeFormInfo","e","key","target","value","Form","Group","Label","InputGroup","hasValidation","Control","required","onChange","isInvalid","Feedback","placeholder","controlId","checked","for","isValidCommit","checkValidity","msg","request_pay","pg","pay_method","merchant_uid","amount","buyer_email","buyer_name","buyer_tel","buyer_addr","buyer_postcode","m_redirect_url","rsp","success","imp_uid","paid_amount","apply_num","error_msg","IMP결제","yyyyMMddhhmmss","Result","useParams","resultCode","time","setTimeout","clearTimeout","Footer","div","Posts","bordered","hover","currentPosts","setSelOrderNum","PostsPagination","pageNumber","currentPage","Math","ceil","totalPosts","postsPerPage","Pagination","pageNum","active","setCurrentPage","Orders","indexOfLastPost","indexOfFirstPost","stateOrderInfo","slice","OrderDetail","selOrderNum","matchedInfo","orderInfo","find","matchedItems","orderItems","filter","striped","disabled","isReview","stateOrderItems","reducerOrderItems","reducerOrderInfo","sort","a","b","searchOrderNum","setSearchOrderNum","number","getInitOrderNum","FormControl","aria-label","aria-describedby","SearchOrder","setOrderInfo","setOrderItems","setIsLoading","arrObj","db","collection","결과","forEach","row","arrObj1","디비읽기","Spinner","animation","setName","email","setEmail","pw","setPw","email_","setEmail_","pw_","setPw_","handleChange","Header","ListGroup","auth","createUserWithEmailAndPassword","updateProfile","error","signInWithEmailAndPassword","setUser","stateReview","reducerReview","inputContent","setInputContent","inputFile","setInputFile","score","setScore","starChecks","setChecks","handleSaveDb","url","img","handleRating","tg","htmlFor","display","as","rows","files","file","업로드작업","storage","ref","child","put","on","snapshot","getDownloadURL","gotoDetail","sizesize","idx","Detail","lazy","RecentViewer","arrHtml","str","localStorage","getItem","matchedItem","removeItem","setRecentIds","products","stock","onAuthStateChanged","where","handleGetUserOrderInfo","handleGetUserCartInfo","initStateOrder","initStateCart","handleGetReview","paddingBottom","Navbar","bg","expand","Container","Brand","Link","to","Toggle","aria-controls","Collapse","Nav","signOut","undefined","exact","path","fallback","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","dataCart","dataTemp","reviews","getSeqMax","arrNew","seqMax","createStore","combineReducers","action","matchedData","currentUser","DelDbByAction","arrNewOne","payloadNew","AddDbByAction","code","doc","set","delete","docId","update","add","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.36ad850a.chunk.js","sourcesContent":["export default [\r\n    {\r\n      id : 0,\r\n      title : '유니크 포켓 CP 티셔츠',\r\n      content : '[프로스펙스오리지널]',\r\n      price : 23700,\r\n      size : [95,100],\r\n      info :''\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : '클래식 복각 폴리',\r\n      content : '[프로스펙스오리지널]',\r\n      price : 63700,\r\n      size : [95,100],\r\n      info:''\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : '클래식 복각 폴리 TR',\r\n      content : '[오리지널 라인]',\r\n      price : 57800,\r\n      size : [95,100],\r\n      info:''\r\n    },\r\n\r\n    {\r\n      id : 3,\r\n      title : \"포켓 오버사이즈 후디bk\",\r\n      content : \"오리지널\",\r\n      price : 60000,\r\n      size : [95,100]\r\n    },\r\n    {\r\n      id : 4,\r\n      title : \"로고 반팔 티셔츠\",\r\n      content : \"오리지널\",\r\n      price : 25000,\r\n      size : [95,100]\r\n    },\r\n    {\r\n      id : 5,\r\n      title : \"삼선 여성 원피스\",\r\n      content : \"오리지널\",\r\n      price : 52000,\r\n      size : [95,100]\r\n    }\r\n  ] \r\n\r\n","export default __webpack_public_path__ + \"static/media/carousel1.13de7104.png\";","export default __webpack_public_path__ + \"static/media/carousel2.21d0a2bc.png\";","import React, {useState} from 'react';\r\nimport {Card , Carousel} from 'react-bootstrap';\r\nimport axios from 'axios'; //ajax 요청 라이브러리-- 더보기 기능\r\nimport { useHistory } from 'react-router';\r\nimport img_carousel1 from './img/carousel1.png'\r\nimport img_carousel2 from './img/carousel2.png'\r\n\r\nfunction Main(props) {\r\n    let [isLoading, setLoading] = useState(false)\r\n\r\n    let getCardComp = () => {\r\n        let arr = []\r\n        for (let i = 0; i < props.items.length; i++) {\r\n          arr.push( <CardComp item = {props.items[i]}   key = {i}  /> )\r\n        }\r\n        return arr\r\n      }\r\n\r\n      //더보기기능- 서버에 ajax 요청\r\n    let onMore = () =>{\r\n        setLoading(true)\r\n\r\n        axios.get('https://jungyooree.github.io/data'+ (props.cntClickMore + 2) + '.json') \r\n        .then((result)=>{ \r\n\r\n          let cnt =props.cntClickMore;\r\n          props.setCntClickMore(cnt+1)\r\n\r\n            //서버에서 get한 데이터를 state에 add\r\n            let arr = [...props.items, ...result.data]\r\n            props.setItems(arr)\r\n            setLoading(false)\r\n        })\r\n        .catch((err) =>{ \r\n            console.log('ajax get 요청 실패', err)\r\n            setLoading(false)\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <Jumbotron className='Jumbotron' fluid></Jumbotron> */}\r\n            <Carousel >\r\n              <Carousel.Item interval={3000} >\r\n                <img style={{height: '19rem'}}\r\n                  className=\"d-block w-100\"\r\n                  src={img_carousel1}\r\n                  alt=\"First slide\"\r\n                />\r\n              </Carousel.Item>\r\n\r\n              <Carousel.Item interval={3000} >\r\n                <img style={{height: '19rem'}}\r\n                  className=\"d-block w-100\"\r\n                  src={img_carousel2}\r\n                  alt=\"Second slide\"\r\n                />\r\n              </Carousel.Item>\r\n            </Carousel>\r\n            \r\n            <div className='container'>\r\n                <div className='row mt-5'>\r\n                { getCardComp() }\r\n                </div>\r\n                { \r\n                  props.cntClickMore < 1\r\n                  ? <button className=\"btn btn-primary mb-5\" onClick = {onMore}>{isLoading ? 'Loading…' : 'MORE+'}</button>\r\n                  : null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CardComp(props) {\r\n    let history = useHistory()\r\n    return (\r\n      <div className='col-md-4 mb-5' onClick={()=>{history.push('/detail/'+ props.item.id)}}>\r\n        <Card style={{ width: '20rem', cursor:'pointer', margin:'auto'}}>\r\n          <Card.Img variant=\"top\" src= {'https://jungyooree.github.io/item'+ (props.item.id + 1) +'.jpg'}/>\r\n          <Card.Body>\r\n            <Card.Title>{props.item.title}</Card.Title>\r\n            <Card.Text>{props.item.content}</Card.Text>\r\n            <Card.Text>{props.item.price.toLocaleString()}</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Main\r\n","import React, {useEffect} from 'react';\r\nimport {Table, Button} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n//======firebase 설정 추가 start======================\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/auth\";\r\nimport {db, storage, auth} from './index.js'\r\n\r\nfunction Cart(props) {\r\n    let history = useHistory()\r\n    let totOrderPrice = 0;\r\n\r\n    useEffect(() => {\r\n        //임시주문 state 초기화 / 페이지 로드시 초기화\r\n        props.dispatch({type:'임시주문초기화'})\r\n    }, [])\r\n    return (\r\n        <div className='content'>\r\n            <h3>CART</h3>\r\n              <Table responsive>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>상품명</th>\r\n                    <th>사이즈</th>\r\n                    <th>수량</th>\r\n                    <th>가격</th>\r\n                    <th>변경</th>\r\n                    <th>삭제</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                { \r\n                    props.stateCart.length === 0 \r\n                    ? <tr><td colSpan=\"7\">장바구니가 비었습니다.</td></tr>\r\n                    :   props.stateCart.map((x,i)=>{\r\n                            totOrderPrice += x.quanPrice\r\n                            return (\r\n                                <tr key={x+i}>\r\n                                    <td>{x.id}</td>\r\n                                    <td><div><img  class=\"img-thumbnail\" src={'https://jungyooree.github.io/item' + (parseInt(x.id) + 1) + '.jpg' } width='40px'/><span>{x.name}</span></div></td>\r\n                                    <td>{x.size}</td>\r\n                                    <td>{x.quan}</td>\r\n                                    <td>{x.quanPrice.toLocaleString()}</td>\r\n                                    <td>\r\n                                        <Button variant=\"outline-dark\" onClick={ ()=>{ props.dispatch( {type:'수량증가', payload:{id:x.id, size:x.size, price:x.price}} ) }}>+</Button>&nbsp;\r\n                                        <Button variant=\"outline-dark\" onClick={ ()=>{ props.dispatch( {type:'수량감소', payload:{id:x.id, size:x.size, price:x.price}} ) }}>-</Button>\r\n                                    </td>          \r\n                                    <td>\r\n                                        <Button variant=\"dark\" onClick={ ()=>{ props.dispatch( {type:'삭제', payload:{id:x.id, size:x.size}} ) }}>x</Button>\r\n                                    </td>             \r\n                                </tr>\r\n                            )\r\n                        })\r\n                }\r\n                    \r\n                </tbody>\r\n            </Table>\r\n            <hr></hr>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 mt-4\">\r\n                    <p>총 상품금액 {totOrderPrice.toLocaleString()} 원 + 배송비 0 </p>\r\n                </div>\r\n                <div className=\"col-md-6  mt-4\">\r\n                    <p>총 주문금액 {totOrderPrice.toLocaleString()} 원 </p>\r\n                </div>\r\n            </div>\r\n            <div >\r\n                \r\n                    <button className=\"btn btn-primary\" size=\"lg\" onClick={()=>{ history.push('/') }}>쇼핑계속하기</button>{' '} \r\n                    {props.stateCart.length === 0 \r\n                    ? null\r\n                    : <button className=\"btn btn-success\" size=\"lg\" onClick={()=>{\r\n                            //cart  정보를  임시주문 state에 저장\r\n                            props.stateCart.map((obj)=>{\r\n                                props.dispatch({type:'임시주문', payload:obj })\r\n                            })\r\n                            history.push('/Order')\r\n                        }}>주문하기</button> \r\n                    }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction makeProps(store){\r\n    return { \r\n        stateCart : store.reducerCart,\r\n        stateTemp : store.reducerTemp\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(makeProps)(Cart);\r\n","let dateTimeFormat = {}\r\n\r\n//1 yyyyMMddhhmmss 형식의  string 데이터 반환 ( EX : 20210324112500 )\r\ndateTimeFormat.yyyyMMddhhmmss = () => {\r\n    var date = new Date();\r\n    var year = date.getFullYear().toString();\r\n\r\n    var month = date.getMonth() + 1;\r\n    month = month < 10 ? '0' + month.toString() : month.toString();\r\n\r\n    var day = date.getDate();\r\n    day = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    var hour = date.getHours();\r\n    hour = hour < 10 ? '0' + hour.toString() : hour.toString();\r\n\r\n    var minites = date.getMinutes();\r\n    minites = minites < 10 ? '0' + minites.toString() : minites.toString();\r\n\r\n    var seconds = date.getSeconds();\r\n    seconds = seconds < 10 ? '0' + seconds.toString() : seconds.toString();\r\n\r\n    var milliseconds = date.getMilliseconds();\r\n    milliseconds = milliseconds < 10 ? '0' + milliseconds.toString() : milliseconds.toString();\r\n\r\n    return year + month + day + hour + minites + seconds + milliseconds;\r\n}\r\n\r\n//2 yyyyMMddhhmmss 형식의  string 데이터 반환 ( EX : 2021-03-24 11:25:00 )\r\ndateTimeFormat.yyyyMMddhhmmss_dash = () => {\r\n    var date = new Date();\r\n    var year = date.getFullYear().toString();\r\n\r\n    var month = date.getMonth() + 1;\r\n    month = month < 10 ? '0' + month.toString() : month.toString();\r\n\r\n    var day = date.getDate();\r\n    day = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    var hour = date.getHours();\r\n    hour = hour < 10 ? '0' + hour.toString() : hour.toString();\r\n\r\n    var minites = date.getMinutes();\r\n    minites = minites < 10 ? '0' + minites.toString() : minites.toString();\r\n\r\n    var seconds = date.getSeconds();\r\n    seconds = seconds < 10 ? '0' + seconds.toString() : seconds.toString();\r\n\r\n    return year + '-'+ month + '-'+ day + ' '+ hour + ':'+ minites + ':'+ seconds;\r\n}\r\n\r\n//3 yyyyMMdd 형식의  string 데이터 반환 ( EX : 20210324 )\r\ndateTimeFormat.yyyyMMdd = () => {\r\n    var date = new Date();\r\n    var year = date.getFullYear().toString();\r\n\r\n    var month = date.getMonth() + 1;\r\n    month = month < 10 ? '0' + month.toString() : month.toString();\r\n\r\n    var day = date.getDate();\r\n    day = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    return year + month + day ;\r\n}\r\n\r\n//4 yyyyMMdd 형식의  string 데이터 반환 ( EX : 2021-03-24 )\r\ndateTimeFormat.yyyyMMdd_dash = (dt = new Date()) => {\r\n    //var date = new Date();\r\n    var date = dt;\r\n    var year = date.getFullYear().toString();\r\n\r\n    var month = date.getMonth() + 1;\r\n    month = month < 10 ? '0' + month.toString() : month.toString();\r\n\r\n    var day = date.getDate();\r\n    day = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    return  year + '-'+ month + '-'+ day;\r\n}\r\n\r\nexport default dateTimeFormat;","import React, {useState} from 'react';\r\nimport {Table, Button, Form, InputGroup} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport randomNum from './randomNum.js'\r\nimport dateTimeFormat from './dateTimeFormat.js'\r\nimport './Order.css';\r\n\r\nfunction Order(props) {\r\n    const strBank = '1111-1111-1111(신한은행) shopmall';\r\n    const 성공N = 1;\r\n    const 실패N = 0;\r\n\r\n    let history = useHistory()\r\n    let totOrderPrice = 0\r\n    let [objFormInfo, setFormInfo]= useState({orderName:'', tel:'', address:'', bank:strBank})\r\n    let [payOpt,setPayOpt] =  useState(0) // 0: 계좌이체 1: 카드결제\r\n\r\n\r\n    var IMP = window.IMP; // 생략가능\r\n    IMP.init('imp03270318'); // 'iamport' 대신 부여받은 \"가맹점 식별코드\"를 사용\r\n\r\n    let currUser = {\r\n         uid: props.user ? props.user.uid : null\r\n        ,uname: props.user ? props.user.displayName : null\r\n    }\r\n\r\n    let onSaveOrderItems = (ranNum)=>{\r\n            props.dispatch( {type:'주문상품저장', payload: props.stateTemp, orderNum:ranNum, uid:currUser.uid })\r\n    }\r\n\r\n    let onSaveOrderInfo = (ranNum, objImpRst = {})=>{\r\n        props.dispatch( {type:'주문정보저장', payload: { \r\n                                                        seq:0\r\n                                                        , orderNum: ranNum\r\n                                                        , orderName: objFormInfo.orderName\r\n                                                        , tel: objFormInfo.tel\r\n                                                        , address: objFormInfo.address\r\n                                                        , paied: objImpRst.결과코드 === 1 ? 'Y' : 'N' \r\n                                                        , totPrice:totOrderPrice\r\n                                                        , date: dateTimeFormat.yyyyMMddhhmmss_dash() \r\n                                                        , payCode: payOpt\r\n                                                        , cardResultCode:!objImpRst.카드승인번호? null : objImpRst.카드승인번호 \r\n                                                        , bank:objFormInfo.bank\r\n                                                        , uid: currUser.uid//props.user.uid\r\n                                                        , uname: currUser.uname//props.user.displayName\r\n                                                    }})\r\n    }\r\n\r\n    let initCartState = ()=>{\r\n        props.dispatch( {type:'장바구니초기화' })\r\n    } \r\n\r\n    let IMP결제 = (ranNum)=>{\r\n       \r\n        let msg =''\r\n        IMP.request_pay({\r\n          pg : 'inicis', // version 1.1.0부터 지원.\r\n          pay_method : 'card',\r\n          merchant_uid : ranNum,//'merchant_' + new Date().getTime(),\r\n          name : props.stateTemp.length > 0 ?  props.stateTemp[0].name + ' 외 기타' : props.stateTemp[0].name,\r\n          amount : 10,\r\n          buyer_email : 'iamport@siot.do',\r\n          buyer_name : objFormInfo.orderName,\r\n          buyer_tel : objFormInfo.tel,\r\n          buyer_addr : objFormInfo.address,\r\n          buyer_postcode : '',\r\n          m_redirect_url : '/'\r\n      }, function(rsp) {\r\n          if ( rsp.success ) {  //카드결제 성공\r\n              msg = `{\r\n              \"결과메시지\":\"결제가 완료되었습니다.\"\r\n              ,\"고유ID\":\"${rsp.imp_uid}\"\r\n              ,\"주문번호\":\"${rsp.merchant_uid}\"\r\n              ,\"결제금액\":${rsp.paid_amount}\r\n              ,\"카드승인번호\":${rsp.apply_num}\r\n              ,\"결과코드\":${성공N}\r\n              }`;\r\n\r\n            //결제와 주문 정보 저장\r\n            savePayAndOrderResultInfo(msg)\r\n\r\n            //3. result 페이지로 이동\r\n            history.push(`/result/${성공N}/`+ rsp.merchant_uid + '/' + `결제가 완료되었습니다.`)\r\n          } else { //카드결제 실패\r\n              msg = `{\r\n              \"결과메시지\":\"결제에 실패하였습니다.\"\r\n              ,\"에러내용\":\"${rsp.error_msg}\"\r\n              ,\"결과코드\":${실패N}\r\n              }`;\r\n\r\n              history.push(`/result/${실패N}/000000/결제에 실패하였습니다. ${rsp.error_msg}`)\r\n          }\r\n          alert(msg);\r\n          return msg;\r\n      });\r\n    \r\n      }\r\n    \r\n    let savePayAndOrderResultInfo = (resultMsg)=>{\r\n        alert(resultMsg);\r\n        let objImpRst =   JSON.parse(resultMsg)\r\n\r\n        //1. OrderItems 저장 (temp에 들은것)\r\n        onSaveOrderItems(objImpRst.주문번호)\r\n    \r\n        //2. OrderInfo 저장\r\n        onSaveOrderInfo(objImpRst.주문번호, objImpRst)\r\n\r\n        //2. 장바구니 데이터 초기화(삭제)\r\n        initCartState()\r\n    }\r\n\r\n    let changeFormInfo = (e, key) => {\r\n        let obj = {...objFormInfo}\r\n        obj[key] = e.target.value \r\n        setFormInfo(obj)\r\n    }\r\n\r\n    let  checkValidity =()=>{\r\n        let isValidCommit = true;\r\n\r\n        for (const key in objFormInfo) {\r\n            if (!objFormInfo[key])\r\n            isValidCommit = false\r\n        }\r\n        return isValidCommit;\r\n    }\r\n\r\n    let goPay = ()=>{\r\n        //필수 입력사항 체크\r\n        if (checkValidity() === false)\r\n            return\r\n\r\n        //결제옵션이 1 계좌이체면(payOpt =0) - 1.주문정보 저장 -> 결과창 이동\r\n        //           2 card결제면(payOpt =1) - 1.카드결제 진행 -2. 결제 (성공) -> 주문정보 저장 -> 결과창 이동\r\n        //                                                      2. 결제 (실패) ->                  결과창 이동\r\n\r\n        if (payOpt === 1){  //  카드결제\r\n            let resultMsg =''\r\n            \r\n            //0. 주문번호 생성\r\n            let ranNum = dateTimeFormat.yyyyMMddhhmmss()//parseInt(randomNum.authNo(6))\r\n\r\n            //1.카드결제 진행 후 성공이면 주문정보 저장함\r\n            resultMsg = IMP결제(ranNum)   \r\n        }\r\n        else if (payOpt === 0) // 계좌이체\r\n        {\r\n            //0. 주문번호 생성\r\n            let ranNum = dateTimeFormat.yyyyMMddhhmmss()//parseInt(randomNum.authNo(6))\r\n            console.log('ranNum',ranNum)\r\n\r\n            //1. OrderItems 저장 (temp에 들은것)\r\n            onSaveOrderItems(ranNum)\r\n            \r\n            //2. OrderInfo 저장\r\n            onSaveOrderInfo(ranNum)\r\n\r\n            //2. 장바구니 데이터 초기화(삭제)\r\n            initCartState()\r\n\r\n            //3. 주문완료페이지로 이동\r\n            history.push(`/result/${성공N}/`+ ranNum+ '/' + \"주문이 완료되었습니다.\")\r\n        }\r\n    }\r\n    return (\r\n        <div className='content'>\r\n            <h3>ORDER</h3>\r\n            <div>\r\n                <Table responsive>\r\n                <thead>\r\n                <tr>\r\n                    <th>상품명</th>\r\n                    <th>옵션</th>\r\n                    <th>수량</th>\r\n                    <th>가격</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                { \r\n                    props.stateTemp.map((x,i)=>{\r\n                        totOrderPrice += x.quanPrice\r\n                        return (\r\n                            <tr key={x+i}>\r\n                                <td><div><img  class=\"img-thumbnail\" src={'https://jungyooree.github.io/item' + (parseInt(x.id) + 1) + '.jpg' } width='60px'/><span>{x.name}</span></div></td>\r\n                                <td>{x.size}</td>\r\n                                <td>{x.quan}</td>\r\n                                <td>{x.quanPrice.toLocaleString()}</td>             \r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n        <hr></hr>\r\n        <Form>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6 left-section\">\r\n                <h5>배송 정보</h5>\r\n                <hr></hr>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>수령인명</Form.Label> \r\n                        <InputGroup hasValidation>\r\n                        {\r\n                             objFormInfo.orderName \r\n                             ? <Form.Control type=\"text\" required onChange={(e)=>{changeFormInfo(e, 'orderName')}} />\r\n                             :<Form.Control type=\"text\" required isInvalid onChange={(e)=>{changeFormInfo(e, 'orderName')}} />\r\n                        }\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        수령인명을 입력하세요.\r\n                        </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>연락처</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                        {\r\n                             objFormInfo.tel\r\n                             ?<Form.Control type=\"text\" placeholder=\"010-0000-0000\" required onChange={(e)=>{changeFormInfo(e, 'tel')}} />\r\n                             :<Form.Control type=\"text\" placeholder=\"010-0000-0000\" required isInvalid onChange={(e)=>{changeFormInfo(e, 'tel')}} />\r\n                        }\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        연락처를 입력하세요.\r\n                        </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                        <Form.Label>주소</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                        {\r\n                             objFormInfo.address \r\n                             ? <Form.Control type=\"text\" required onChange={(e)=>{changeFormInfo(e, 'address')}} />\r\n                             : <Form.Control type=\"text\" required isInvalid onChange={(e)=>{changeFormInfo(e, 'address')}} />\r\n                        }\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        주소를 입력하세요.\r\n                        </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                <h5>결제수단</h5>\r\n                <hr></hr>\r\n                <div>\r\n                    <input type=\"radio\"  id=\"radioDefault1\" name=\"radioPay\"  value = \"무통장입금\" checked= {payOpt === 0 ? true : false} \r\n                    onChange={(e)=>{ setPayOpt(e.target.value === '무통장입금' ? 0 : 1) \r\n                                        objFormInfo.bank = strBank}}/>\r\n                    <label for=\"radioDefault1\">\r\n                        무통장 입금 \r\n                    </label>\r\n                    <span>{strBank}</span>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\"  id=\"radioDefault2\" name =\"radioPay\" value = \"카드결제\" checked= {payOpt === 1 ? true : false} \r\n                    onChange={(e)=>{ setPayOpt(e.target.value === '카드결제' ? 1 : 0) \r\n                                        objFormInfo.bank = ''}}/>\r\n                    <label for=\"radioDefault2\">\r\n                        카드결제\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-6 right-section\" >\r\n                <h5>최종결제 금액</h5>\r\n                <hr></hr>\r\n                <p id ='totPrice'>{totOrderPrice.toLocaleString()} 원 </p>\r\n                <p>총 상품금액 {totOrderPrice.toLocaleString()} 원 + 배송비 0 </p>\r\n                <Button className=\"btn btn-success\" size=\"lg\" type =\"button\" onClick={ goPay }>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;결제하기 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button> \r\n            </div>\r\n        </div>\r\n        </Form>\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction makeProps(store){\r\n    return { \r\n        stateTemp : store.reducerTemp,\r\n        stateCart : store.reducerCart\r\n    }\r\n}\r\n\r\nexport default connect(makeProps)(Order);\r\n","import React, {useEffect} from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport './Result.css'\r\n\r\nfunction Result() {\r\n    let {resultCode, orderNum, msg} = useParams()\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        //주문 , 결제 성공할때만\r\n\r\n        if (resultCode != 1) return;\r\n        \r\n        let time = setTimeout(()=>{  history.push('/orderList')}, 3000)\r\n        return () => {\r\n            clearTimeout(time)\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className='content'>\r\n            <div className = 'result'>\r\n                <div><p>{msg}</p></div>\r\n                {\r\n                    resultCode == 1\r\n                    ?\r\n                        <div>\r\n                            <p>주문번호:{orderNum}</p>\r\n                            <p className=\"bold\">잠시후 주문리스트로 이동합니다...</p>\r\n                        </div>\r\n                    : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n      <div div className='Footer'>\r\n        <div className='footerInner'>\r\n        <p>\r\n          법인명: (주)LS NETWORKS 대표자: 구대표 사업자등록번호:000-000-0000 통신판매업: 제2019-서울종로-0193호<br/>\r\n          주소 : 서울특별시 종로구 율곡로 88 삼환빌딩 8층 (운니동) 대표전화 : 02-0000-7100 (가맹문의 : 02-6350-0000)\r\n        </p>\r\n        <p class=\"address\">COPYLEFT(c) LS NETWORKS CO. ALL RIGHTS RESERVED.</p>   \r\n        </div>     \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {Table} from 'react-bootstrap';\r\n\r\nfunction Posts(props) {\r\n    return (\r\n        <div>\r\n            <Table bordered hover>\r\n            <thead>\r\n            <tr>\r\n                <th>주문일</th>\r\n                <th>주문번호</th>\r\n                {/* <th>주문상품</th> */}\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            { \r\n                props.currentPosts.length === 0 \r\n                    ? <tr><td colSpan=\"3\">데이터가 존재하지 않습니다.</td></tr>\r\n                    :  \r\n                    props.currentPosts.map((x,i)=>{\r\n                        return (\r\n                            <tr key={x+i} \r\n                            \r\n                                onClick = {()=>{ props.setSelOrderNum(x.orderNum)  }}> {/* selected 주문번호 변경 */}\r\n                                <td>{x.date}</td>\r\n                                <td>{x.orderNum}</td> \r\n                                </tr>\r\n                            )\r\n                    })\r\n                }\r\n                    \r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","import React from 'react'\r\nimport {Pagination} from 'react-bootstrap';\r\n\r\nfunction PostsPagination(props) {\r\n    const pageNumber = [] // ( 전체 페이지 수 / 각 페이지 당 포스트 수) 를 계산하여 전체 페이지 번호를 구한 배열\r\n    const currentPage = props.currentPage\r\n    // Math.ceil: 올림\r\n    for (let i = 1; i <= Math.ceil(props.totalPosts / props.postsPerPage); i++) {\r\n        pageNumber.push(i);\r\n    }\r\n    return (\r\n        <div>\r\n            <Pagination size=\"sm\" className=\"justify-content-center\">\r\n                    {pageNumber.map((pageNum) => (\r\n                        //onclick에서 현재 페이지 번호(currentPage)를 설정\r\n                        <Pagination.Item key={pageNum} active={pageNum === currentPage} onClick={() => props.setCurrentPage(pageNum)}> \r\n                            {pageNum}\r\n                        </Pagination.Item>\r\n                    ))}\r\n            </Pagination>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostsPagination\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Table, InputGroup, FormControl, Button} from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { db} from './index.js';\r\nimport \"firebase/firestore\"; \r\nimport \"firebase/storage\";\r\nimport \"firebase/auth\";\r\nimport Posts from './Posts.js'\r\nimport PostsPagination from './PostsPagination.js'\r\n\r\nfunction OrderList(props) {\r\n    let history = useHistory()\r\n      // orderinfo 최신내역부터 보이게 역순으로 정렬시키기\r\n    props.stateOrderInfo.sort((a,b)=> parseInt(b.orderNum) - parseInt(a.orderNum))\r\n\r\n    let [searchOrderNum, setSearchOrderNum] = useState('')\r\n    \r\n\r\n    let getInitOrderNum = ()=>{\r\n        let number = ''\r\n        if (props.stateOrderInfo.length > 0)\r\n        {\r\n            number = props.stateOrderInfo[0].orderNum\r\n        }\r\n        return number\r\n    }\r\n\r\n    let [selOrderNum, setSelOrderNum] = useState(getInitOrderNum()) //orderlist에서 selected 주문번호\r\n\r\n    const handleSearchOrderNum = ()=>{\r\n        history.push(`/searchOrder/${searchOrderNum}`)\r\n    }\r\n    return (\r\n        <div className= \"content\" >\r\n            <h3>ORDER LIST</h3>\r\n            <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                placeholder=\"검색할 주문번호를 입력하세요.\"\r\n                aria-label=\"Recipient's username\"\r\n                aria-describedby=\"basic-addon2\"\r\n                onChange={(e)=>{ setSearchOrderNum(e.target.value) }}\r\n                />\r\n                <Button variant=\"outline-secondary\" id=\"button-addon2\" onClick={handleSearchOrderNum}>\r\n                검색\r\n                </Button>\r\n            </InputGroup>\r\n           \r\n            <Orders stateOrderInfo = {props.stateOrderInfo}  selOrderNum = {selOrderNum} setSelOrderNum = {setSelOrderNum} />\r\n            {\r\n               props.stateOrderInfo && props.stateOrderInfo.length > 0  \r\n               ?<OrderDetail orderInfo = {props.stateOrderInfo} orderItems = {props.stateOrderItems} selOrderNum = {selOrderNum}  setSelOrderNum = {setSelOrderNum} />\r\n               : null\r\n            }\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Orders(props){\r\n    const [currentPage, setCurrentPage] = useState(1)//currentPage는 현재 페이지\r\n    const [postsPerPage] = useState(5)//한 페이지에서 보여줄 post의 수\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage //해당 페이지에서 마지막 post의 index 번호\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage //해당 페이지에서 첫번째 post의 index 번호\r\n    const currentPosts = props.stateOrderInfo.slice(indexOfFirstPost, indexOfLastPost) //currentPosts는 각 페이지에서 보여질 포스트 배열\r\n    \r\n    const totalPosts= props.stateOrderInfo.length //전체 post의 개수\r\n    return(\r\n        <div>\r\n            <Posts currentPosts={currentPosts} setSelOrderNum = {props.setSelOrderNum}/>\r\n            <PostsPagination postsPerPage={postsPerPage} totalPosts={totalPosts} currentPage ={currentPage} setCurrentPage={setCurrentPage} />\r\n        </div> \r\n    )\r\n}\r\n\r\n//ORDER LIST 상세 Modal\r\nfunction OrderDetail(props) {\r\n\r\n    let selOrderNum = props.selOrderNum\r\n    const history = useHistory()\r\n    let matchedInfo =props.orderInfo.find((x)=> { return x.orderNum === selOrderNum })\r\n    let matchedItems =props.orderItems.filter((x)=> { return x.orderNum === selOrderNum })\r\n\r\n\r\n        \r\n    const handleReview =(id, name, size, orderNum)=>{\r\n        history.push(`/review/${id}/${name}/${size}/${orderNum}`)\r\n    }\r\n    return (\r\n        <div>\r\n            <hr></hr>\r\n            <h5>주문 상세정보</h5>\r\n            \r\n            <div className = 'topDetail'>\r\n                <p><span>주문일시{' '}{matchedInfo.date}</span><span>주문번호{' '}{selOrderNum}</span></p>\r\n                \r\n            </div>\r\n            <Table striped bordered>\r\n                <thead>\r\n                <tr>\r\n                    <th>상품명</th>\r\n                    <th>옵션</th>\r\n                    <th>수량</th>\r\n                    <th>가격</th>\r\n                    <th>후기</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                { \r\n                     matchedItems.map((x,i)=>{\r\n                        return (\r\n                            <tr key={x+i}>\r\n                                <td><div><img  class=\"img-thumbnail\" src={'https://jungyooree.github.io/item' + (parseInt(x.id) + 1) + '.jpg' } width='60px'/><span>{x.name}</span></div></td>\r\n                                <td>{x.size}</td>\r\n                                <td>{x.quan}</td>\r\n                                <td>{x.quanPrice.toLocaleString()}</td>           \r\n                                <td><Button onClick={()=>{handleReview(x.id, x.name, x.size, x.orderNum)}}  disabled = {x.isReview ? true : false }>{x.isReview ? '완료' : '쓰기' }</Button></td>      \r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n                    \r\n                </tbody>\r\n            </Table>\r\n            <hr></hr>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 left-section\">\r\n                    <h5>배송지 정보</h5>\r\n                    <hr></hr>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">수령인</div>\r\n                        <div className=\"col-md-6\">{matchedInfo.orderName}</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">연락처</div>\r\n                        <div className=\"col-md-6\">{matchedInfo.tel}</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">배송지</div>\r\n                        <div className=\"col-md-6\">{matchedInfo.address}</div>\r\n                    </div>\r\n                    <h5>결제 수단 정보</h5>\r\n                    <hr></hr>\r\n                    {\r\n                        matchedInfo.payCode === 0\r\n                        ? <p>무통장 입금: {matchedInfo.bank}<br/>결제완료여부: {matchedInfo.paied === 'Y' ? '결제완료' : '입금대기중'}</p>\r\n                        : <p>카드결제 승인번호: {matchedInfo.cardResultCode}<br/>결제완료여부: {matchedInfo.paied === 'Y' ? '결제완료' : '미결제'}</p>\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-6 right-section\" >\r\n                    <h5>결제 금액 정보</h5>\r\n                    <hr></hr>\r\n                    <p id ='totPrice'>{matchedInfo.totPrice.toLocaleString()}원 </p>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction makeProps(store){\r\n    return { \r\n        stateOrderItems : store.reducerOrderItems,\r\n        stateOrderInfo : store.reducerOrderInfo\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(makeProps)(OrderList);","import React, {useEffect, useState} from 'react'\r\nimport { useParams } from 'react-router'\r\nimport {Table,Spinner} from 'react-bootstrap'\r\nimport { db} from './index.js';\r\nimport \"firebase/firestore\"; \r\nimport \"firebase/storage\";\r\nimport \"firebase/auth\";\r\n\r\nfunction SearchOrder() {\r\n    let {orderNum} = useParams()\r\n    let [orderInfo, setOrderInfo] = useState([])\r\n    let [orderItems, setOrderItems] = useState([])\r\n    let [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n    \r\n        function 디비읽기(){\r\n            setIsLoading(true)\r\n\r\n            let arrObj = []\r\n            db.collection('orderinfo').get().then((결과)=>{\r\n                                                결과.forEach((row)=>{\r\n                                                    \r\n                                                    if (row.data().orderNum == orderNum){\r\n                                                        //주문번호에 히당하는 정보\r\n                                                        \r\n                                                        arrObj.push(row.data())\r\n                                                    }\r\n                                                })\r\n                \r\n                                                setOrderInfo(arrObj)//props.dispatch( {type:'주문정보초기화', payload: arrObj})\r\n                                            })\r\n        \r\n            let arrObj1 = []\r\n            db.collection('orderitems').get().then((결과)=>{\r\n\r\n                                                결과.forEach((row)=>{\r\n                                                    if (row.data().orderNum == orderNum) //해당 주문번호의 정보만 추출\r\n                                                    {\r\n                                                        arrObj1.push(row.data())\r\n                                                    }\r\n                                                })\r\n                                                \r\n                                                setOrderItems(arrObj1)//props.dispatch( {type:'주문상품초기화', payload: arrObj1});\r\n                                                setIsLoading(false)\r\n                                            })\r\n        }\r\n        디비읽기();\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className= \"content\">\r\n          {\r\n              orderInfo.length === 0\r\n                ? <p>{ isLoading ? <Spinner animation=\"border\" /> : '검색된 데이터가 없습니다.' }</p>\r\n                : <OrderDetail orderInfo={orderInfo} orderItems={orderItems}/>\r\n          }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction OrderDetail(props)\r\n{\r\n    let matchedInfo = props.orderInfo[0]\r\n    let matchedItems = props.orderItems\r\n\r\n    return(\r\n        <div>\r\n            <div className = 'topDetail'>\r\n                <p><span>주문일시{' '}{matchedInfo.date}</span><span>주문번호{' '}{matchedInfo.orderNum}</span></p>\r\n            </div>\r\n            <Table striped bordered>\r\n                <thead>\r\n                <tr>\r\n                    <th>상품명</th>\r\n                    <th>옵션</th>\r\n                    <th>수량</th>\r\n                    <th>가격</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                { \r\n                     matchedItems.map((x,i)=>{\r\n                        return (\r\n                            <tr key={x+i}>\r\n                                <td><div><img  class=\"img-thumbnail\" src={'https://jungyooree.github.io/item' + (parseInt(x.id) + 1) + '.jpg' } width='60px'/><span>{x.name}</span></div></td>\r\n                                <td>{x.size}</td>\r\n                                <td>{x.quan}</td>\r\n                                <td>{x.quanPrice.toLocaleString()}</td>             \r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n                </tbody>\r\n            </Table>\r\n            <hr></hr>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 left-section\">\r\n                    <h5>배송지 정보</h5>\r\n                    <hr></hr>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">수령인</div>\r\n                        <div className=\"col-md-6\">{matchedInfo.orderName}</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">연락처</div>\r\n                        <div className=\"col-md-6\">{matchedInfo.tel}</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">배송지</div>\r\n                        <div className=\"col-md-6\">{matchedInfo.address}</div>\r\n                    </div>\r\n                    <h5>결제 수단 정보</h5>\r\n                    <hr></hr>\r\n                    {\r\n                        matchedInfo.payCode === 0\r\n                        ? <p>무통장 입금: {matchedInfo.bank} 결제완료여부: {matchedInfo.paied === 'Y' ? '결제완료' : '입금대기중'}</p>\r\n                        : <p>카드결제 승인번호: {matchedInfo.cardResultCode} 결제완료여부: {matchedInfo.paied === 'Y' ? '결제완료' : '미결제'}</p>\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-6 right-section\" >\r\n                    <h5>결제 금액 정보</h5>\r\n                    <hr></hr>\r\n                    <p id ='totPrice'>{matchedInfo.totPrice.toLocaleString()}원 </p>\r\n                </div>\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchOrder\r\n","import {InputGroup, Form,Button,Card,ListGroup} from 'react-bootstrap';\r\nimport React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { auth} from './index.js';\r\nimport { db} from './index.js';\r\nimport \"firebase/firestore\"; \r\nimport \"firebase/storage\";\r\nimport \"firebase/auth\";\r\n\r\nfunction Login(props) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [pw, setPw] = useState('')\r\n    const [email_, setEmail_] = useState('')\r\n    const [pw_, setPw_] = useState('')\r\n\r\n    const history = useHistory()\r\n\r\n    const handleCreateUser = ()=>{auth.createUserWithEmailAndPassword(email, pw).then((result)=>{\r\n        result.user.updateProfile({ displayName: name})\r\n        alert('회원가입성공!')\r\n        history.push('/')\r\n    }).catch((error)=>\r\n        alert(error)\r\n    )} \r\n\r\n    const handleChange = (e)=>{\r\n        if(e.target.id === 'email_new')\r\n        {\r\n            setEmail(e.target.value) \r\n        }\r\n        else if (e.target.id === 'pw_new')\r\n        {\r\n            setPw(e.target.value) \r\n        }\r\n        else if (e.target.id === 'name_new')\r\n        {\r\n            setName(e.target.value) \r\n        }\r\n        else if(e.target.id === 'email')\r\n        {\r\n            setEmail_(e.target.value) \r\n        }\r\n        else if (e.target.id === 'pw')\r\n        {\r\n            setPw_(e.target.value) \r\n        }\r\n    }\r\n   \r\n    const handleLogin = ()=>{auth.signInWithEmailAndPassword(email_,pw_).then((result)=>{\r\n        //user 정보 state에 저장\r\n        props.setUser(result.user)\r\n        history.push('/')\r\n    }).catch((error)=>\r\n        alert(error)\r\n    )} \r\n    return (\r\n        <div className= \"content\" >\r\n            <Card className =' mb-5' style={{ width: '100%'}}>\r\n                <Card.Header>회원가입</Card.Header>\r\n                <Card.Body>\r\n                    <InputGroup hasValidation>\r\n                        <ListGroup.Item style={{ width: '100%' }}>\r\n                            <Form.Control type=\"name\" id='name_new' placeholder=\"name\" onChange= { handleChange } />\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item style={{ width: '100%' }}>\r\n                            <Form.Control type=\"email\" id='email_new' placeholder=\"email\" onChange= { handleChange } />\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item style={{ width: '100%' }}>\r\n                            <Form.Control controlId=\"formBasicPassword\" type=\"password\" id='pw_new' placeholder=\"password 6자리 이상\"  onChange= { handleChange }  />\r\n                        </ListGroup.Item>\r\n                    </InputGroup>\r\n                    <Button className=\"btn btn-success mt-3 w-100\"  type =\"button\" onClick={ handleCreateUser }>회원가입</Button>\r\n                </Card.Body>\r\n            </Card>\r\n            <Card className ='m-auto' style={{ width: '100%'}}>\r\n                <Card.Header>로그인</Card.Header>\r\n                <Card.Body>\r\n                    <InputGroup hasValidation>\r\n                        <ListGroup.Item style={{ width: '100%' }}>\r\n                            <Form.Control type=\"email\" id='email' placeholder=\"email\"  onChange= { handleChange } />\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item style={{ width: '100%' }}>\r\n                            <Form.Control controlId=\"formBasicPassword\" type=\"password\" id='pw' placeholder=\"password\"  onChange= { handleChange }  />\r\n                        </ListGroup.Item>\r\n                    </InputGroup>\r\n                    <Button className=\"btn btn-success mt-3 w-100\"  type =\"button\" onClick={ handleLogin }>로그인</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction makeProps(store){\r\n    return { \r\n        stateOrderItems : store.reducerOrderItems,\r\n        stateOrderInfo : store.reducerOrderInfo\r\n    }\r\n}\r\n\r\nexport default connect(makeProps)(Login);\r\n","import React, {useState} from 'react'\r\nimport { InputGroup, Form, Button,ToggleButtonGroup,ToggleButton} from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { db, storage} from './index.js';\r\nimport \"firebase/firestore\"; \r\nimport \"firebase/storage\";\r\nimport \"firebase/auth\";\r\nimport { useParams } from 'react-router-dom';\r\nimport dateTimeFormat from './dateTimeFormat.js'\r\n\r\nfunction Review(props) {\r\n    let {id, name, size, orderNum} = useParams()\r\n    const history = useHistory()\r\n    const [inputContent, setInputContent] = useState('')\r\n    const [inputFile, setInputFile] = useState('')\r\n    const [score, setScore] = useState(['★', '☆','☆','☆','☆']);\r\n    const [starChecks, setChecks] = useState([false, false,false,false,false]);\r\n\r\n    const handleSaveDb = (url)=>{\r\n        //, 상품id,내용,이미지,, score,uid,uname ,날짜 \r\n        let obj = { id:id\r\n                , content:inputContent\r\n                , img:url\r\n                , score:score\r\n                , name:name\r\n                , size:size\r\n                , uid: props.user ? props.user.uid : ''\r\n                , uname: props.user ? props.user.displayName : ''\r\n                , date: dateTimeFormat.yyyyMMddhhmmss_dash() //new Date()\r\n        }\r\n      \r\n        props.dispatch({type:'리뷰정보저장', payload:obj})\r\n        props.dispatch({type:'업데이트_리뷰작성여부', payload:{orderNum:orderNum, id:id}})//  orderInfoItems 의 isReview 를 true로 업데이트\r\n    }\r\n\r\n    const handleSave = () => {\r\n        let file = inputFile\r\n        let storageRef = storage.ref()\r\n        let 저장할경로 = storageRef.child('image/' + file.name)\r\n        let 업로드작업 = 저장할경로.put(file)\r\n    \r\n        if (file){ //파일이 있으면 : 파일업로드 하고 -> 디비 저장\r\n            업로드작업.on( 'state_changed', \r\n                            // 변화시 동작하는 함수 \r\n                            null, \r\n                            //에러시 동작하는 함수\r\n                            (error) => {\r\n                                console.error('실패사유는', error);\r\n                                alert(error)\r\n                                return\r\n                            }, \r\n                            // 업로드 성공시 동작하는 함수\r\n                            () => {\r\n                                    업로드작업.snapshot.ref.getDownloadURL().then((url) => {\r\n                                        // 파일 업로드가 성공하면 리뷰 정보를 디비에 저장\r\n                                        handleSaveDb(url)\r\n                                });\r\n                            }\r\n            );\r\n        }else{ //파일 없으면 : 파일 업로드 X -> 디비 저장\r\n            handleSaveDb('')\r\n        }\r\n\r\n        history.push('/')\r\n    }\r\n\r\n    const handleRating = (e) => {\r\n\r\n        const tg = e.target\r\n\r\n        if (tg.value == '1'){\r\n            if (tg.checked){\r\n                setScore(['★','☆','☆','☆','☆'])\r\n                setChecks([true, false, false, false, false])\r\n            }\r\n            else{\r\n                setScore(['★','☆','☆','☆','☆'])\r\n                setChecks([true, false, false, false, false])\r\n            }\r\n        }\r\n        else if (tg.value == '2'){\r\n            if (e.target.checked){\r\n\r\n                setScore(['★','★','☆','☆','☆'])\r\n                setChecks([true, true, false, false, false])\r\n            }\r\n            else{\r\n                setScore(['★','☆','☆','☆','☆'])\r\n                setChecks([true, false, false, false, false])\r\n            }\r\n        }\r\n        else if (tg.value == '3'){\r\n                if (e.target.checked){\r\n                    setScore(['★','★','★','☆','☆'])\r\n                    setChecks([true, true, true, false, false])\r\n                }\r\n                else{\r\n                    setScore(['★','★','☆','☆','☆'])\r\n                    setChecks([true, true, false, false, false])\r\n                }\r\n        }\r\n        else if (tg.value == '4'){\r\n            if (e.target.checked){\r\n                setScore(['★','★','★','★','☆'])\r\n                setChecks([true, true, true, true, false])\r\n            }\r\n            else{\r\n                setScore(['★','★','★','☆','☆'])\r\n                setChecks([true, true, true, false, false])\r\n            }\r\n        }\r\n        else if (tg.value == '5'){\r\n            if (e.target.checked){\r\n                setScore(['★','★','★','★','★'])\r\n                setChecks([true, true, true, true, true])\r\n            }\r\n            else{\r\n                setScore(['★','★','★','★','☆'])\r\n                setChecks([true, true, true, true, false])\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='content'>\r\n            <h4>별점과 이용경험을 남겨주세요.</h4>\r\n            <Form.Label htmlFor=\"basic-url\"></Form.Label>\r\n                    <input type=\"checkbox\" name=\"rating\" id=\"rating1\" value=\"1\" title=\"1점\"   checked= {starChecks[0]}  style={{display:'none'}} onClick={handleRating}/>\r\n                    <label for=\"rating1\">{score[0]}</label>\r\n                    <input type=\"checkbox\" name=\"rating\" id=\"rating2\" value=\"2\"  title=\"2점\"  checked= {starChecks[1]}  style={{display:'none'}} onClick={handleRating}/>\r\n                    <label for=\"rating2\">{score[1]}</label>\r\n                    <input type=\"checkbox\" name=\"rating\" id=\"rating3\" value=\"3\"  title=\"3점\"  checked= {starChecks[2]}  style={{display:'none'}} onClick={handleRating}/>\r\n                    <label for=\"rating3\">{score[2]}</label>\r\n                    <input type=\"checkbox\" name=\"rating\" id=\"rating4\" value=\"4\"  title=\"4점\"  checked= {starChecks[3]}  style={{display:'none'}} onClick={handleRating}/>\r\n                    <label for=\"rating4\">{score[3]}</label>\r\n                    <input type=\"checkbox\" name=\"rating\" id=\"rating5\" value=\"5\"  title=\"5점\"  checked= {starChecks[4]} style={{display:'none'}} onClick={handleRating}/>\r\n                    <label for=\"rating5\" >{score[4]}</label>\r\n               \r\n\r\n            <InputGroup>\r\n                <InputGroup.Text>별점 후기 남기기</InputGroup.Text>\r\n                <Form.Control as=\"textarea\" rows={3} onChange = { (e)=> { setInputContent(e.target.value)} } />\r\n            </InputGroup>           \r\n\r\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                {/* <Button onClick= { setScore( score++)}>점수</Button> */}\r\n                <Form.Control type=\"file\" onChange = { (e)=> { setInputFile(e.target.files[0])}} />\r\n            </Form.Group>\r\n            <Button className=\"btn btn-success\" size=\"lg\" type =\"button\" onClick= {handleSave}>등록</Button> \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction makeProps(store){\r\n    return {\r\n        stateReview : store.reducerReview,\r\n    }\r\n}\r\n\r\nexport default connect(makeProps)(Review);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Table} from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction ReviewList(props) {\r\n    const history = useHistory()\r\n    \r\n    // 최신내역부터 보이게 역순으로 정렬시키기\r\n    props.stateReview.sort((a,b)=> b.seq - a.seq)\r\n\r\n    const gotoDetail = (id) =>{\r\n        let matchedItem = props.items.find((item)=> { return parseInt(item.id) === parseInt(id) })\r\n\r\n        if(!matchedItem){\r\n            alert('구매 후기에 해당하는 상품이 상품목록에 존재 하지 않습니다.')\r\n            return\r\n        }\r\n        history.push('/detail/' + id)\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <Table sizesize=\"sm\" className=\"text-left\" >\r\n                <thead>\r\n                    <tr>\r\n                    <th colSpan='3' className=\"text-center\">구매후기</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n             {\r\n                props.stateReview.map((x, idx)=>{ \r\n                    if (idx < 10) // 10줄 까지만 보이게\r\n                    return (\r\n                    <tr className=\"text-left\" >\r\n                     <td colSpan=\"2\" className=\"text-left\"  style={{cursor:'pointer'}} onClick={()=>gotoDetail(x.id)}>[{x.score}]      {x.content}</td>\r\n                    <td colSpan=\"1\" className=\"text-left\" style={{cursor:'pointer'}} onClick={()=>gotoDetail(x.id)}>{x.name} {x.size} </td>\r\n                    </tr>)\r\n                })\r\n            }\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction makeProps(store){\r\n    return {\r\n        stateReview : store.reducerReview,\r\n    }\r\n}\r\n\r\nexport default connect(makeProps)(ReviewList)\r\n","/* eslint-disable*/ \nimport {Navbar,Container, Nav, Spinner } from 'react-bootstrap';\nimport React, {useState, lazy, Suspense, useEffect} from 'react';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport products from './data/products.js';\nimport Main from './Main.js';\n//import Detail from './Detail.js';\nlet Detail = lazy( ()=>{ return import('./Detail.js') } ); // lazy loading\nimport Cart from './Cart.js';\nimport Order from './Order.js';\nimport Result from './Result.js';\nimport Footer from './Footer';\nimport OrderList from './OrderList.js';\nimport SearchOrder from './SearchOrder.js';\nimport './App.css';\nimport {db, storage, auth} from './index.js'\nimport Login from './Login.js'\nimport Review from './Review.js'\nimport ReviewList from './ReviewList.js'\nimport \"firebase/firestore\"; \nimport \"firebase/storage\";\nimport \"firebase/auth\";\n\nfunction App(props) {\n\n  let [items, setItems] = useState(products)\n  let [stock, setStock] = useState([10,20,30])\n  let [cntClickMore,setCntClickMore] = useState(0) //더보기버튼 누룬 횟수\n  let [recentIds, setRecentIds] = useState([]) // 최근본 상품 id\n  let [user, setUser] = useState(); //로그인된 user 정보\n  let history = useHistory()\n\n  const handleGetReview =()=>{\n    let arrObj = [];\n\n    // get db \n    db.collection('review').get().then((결과) => {\n      결과.forEach((row) => {\n        arrObj.push(row.data());\n      });\n      // state save db 값\n      props.dispatch({ type: '리뷰정보초기화', payload: arrObj });\n    });\n  }\n\n  const handleGetUserOrderInfo = (user)=>{\n    //디비에서 내 주문정보 읽어오기\n\n    // state 초기값 로드 from db \n    let arrObj = []\n    let arrObj1 = []\n\n  \n    db.collection('orderinfo').where('uid', '==', user.uid).get().then((결과)=>{ //내 주문 정보 해당건 추출\n      결과.forEach((row)=>{\n              arrObj.push(row.data())\n      })\n      \n      props.dispatch( {type:'주문정보초기화', payload: arrObj})\n    })\n\n    db.collection('orderitems').where('uid', '==', user.uid).get().then((결과)=>{\n      결과.forEach((row)=>{\n              arrObj1.push(row.data())\n      })\n\n      props.dispatch( {type:'주문상품초기화', payload: arrObj1})\n    })\n  }\n  \n  const handleGetUserCartInfo = (user)=>{\n    //디비에서 내 Cart정보 읽어오기\n\n    let arrObj =[]\n    db.collection('cart').where('uid', '==', user.uid)\n    //db.collection('cart').where('uid', '==', auth.currentUser.uid)\n        .get()\n        .then((결과)=>{\n                        결과.forEach((row)=>{\n                            arrObj.push(row.data())\n                        })\n\n                        //state에 저장\n                        props.dispatch({type:'장바구니초기값전달', payload:arrObj})\n        })\n        .catch((error) => {\n            console.log(\"Error getting documents: \", error);\n        })\n  }\n\n  useEffect(() => {\n    \n    //로그인 / 로그아웃/ 새로로침 ...시 발생하는 이벤트\n    auth.onAuthStateChanged((user)=>{\n      setUser(user)\n\n      if (user) //로그인 일때\n      {\n        // state 초기값 로드 from db \n        handleGetUserOrderInfo(user)\n        handleGetUserCartInfo(user)\n      }\n      else //로그아웃 일때\n      {\n        initStateOrder() // 로그아웃 할때 Order state를 초기화 - 비어 있게 만듬 (비회원 상태일때는 비워 놓아야함)\n        initStateCart()  // 로그아웃 할때 cart state를 초기화 - 비어 있게 만듬 (비회원 상태일때는 비워 놓아야함)\n      }\n\n    })\n\n    // state 초기값 로드 from db \n    handleGetReview()\n    return () => {\n    }\n  }, [])\n\n  const initStateOrder =()=>{\n    props.dispatch( {type:'주문정보초기화', payload: []})\n    props.dispatch( {type:'주문상품초기화', payload: []})\n  }\n\n  const initStateCart =()=>{\n    props.dispatch( {type:'장바구니초기화디비삭제안함', payload: []})\n  }\n\n  const handleOut = ()=>{auth.signOut().then((result)=>{\n    //user 정보 state에 제거\n    setUser(undefined)\n\n    history.push('/')\n  })}  \n\n  return (\n    <div className=\"App\" style={{paddingBottom: 70}}>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <Container>\n        <Navbar.Brand as = {Link} to ='/'>LSmall</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n        {user\n              ? \n                <Nav className=\"me-auto\">\n                <Nav.Link as = {Link} to ='/'>HOME</Nav.Link>\n                <Nav.Link as = {Link} to ='/cart'>CART(🛒{props.stateCart.length})</Nav.Link>\n                <Nav.Link as = {Link} to ='/orderList'>ORDER LIST</Nav.Link>\n                <Navbar.Text>👤{user.displayName}</Navbar.Text>\n                <Nav.Link  onClick={handleOut}> LOGOUT</Nav.Link>\n                </Nav>\n              : \n                <Nav className=\"me-auto\">\n                <Nav.Link as = {Link} to ='/'>HOME</Nav.Link>\n                <Nav.Link as = {Link} to ='/cart'>CART(🛒{props.stateCart.length})</Nav.Link>\n                <Nav.Link as = {Link} to ='/orderList'>ORDER LIST</Nav.Link>\n                <Nav.Link  as = {Link} to ='/login'>LOGIN</Nav.Link>\n                </Nav>\n              }\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Switch> {/* Switch :경로중복 방지..하나만 보여준다 */}\n        <Route exact path='/'>  {/* Route :페이지 나누기 */}\n          <Main items = {items} setItems ={setItems} cntClickMore = {cntClickMore} setCntClickMore={setCntClickMore}/>\n          <ReviewList items = {items}/>\n        </Route>\n        <Route path='/detail/:id'>\n          <Suspense fallback={<div><Spinner animation=\"border\" /></div>}>\n            <Detail items = {items} stock = {stock}  setRecentIds = {setRecentIds} />\n          </Suspense>\n        </Route>\n        <Route path='/cart'>\n          <Cart  user={user} />\n        </Route>\n        <Route path='/order'>\n          <Order user={user} />\n        </Route>\n        <Route path='/result/:resultCode/:orderNum/:msg'>\n          <Result />\n        </Route>\n        <Route path='/orderList'>\n          <OrderList user={user}  />\n        </Route>\n        <Route path='/login'>\n          <Login user={user} setUser={setUser}/>\n        </Route>\n        <Route path='/searchOrder/:orderNum'>\n          <SearchOrder />\n        </Route>\n        <Route path='/review/:id/:name/:size/:orderNum'>\n          <Review user={user} />\n        </Route>\n      </Switch>\n      <RecentViewer items = {items} setRecentIds= {setRecentIds}/>{/* 최근본상품 viewer */}\n      <Footer />\n    </div>\n  );\n\n\n}\n\nfunction RecentViewer (props){\n  let history = useHistory()\n  let arrHtml =[]\n\n  let str = localStorage.getItem('Recent');\n  if (!str) return null\n\n  let arr = JSON.parse(str)\n  if (arr.length === 0) return null\n\n  arrHtml =   arr.map((id)=>{\n            let matchedItem = props.items.find((item)=> { return parseInt(item.id) === parseInt(id) })\n            return(\n              matchedItem \n              ? \n                <div key={id} onClick={()=>{history.push('/detail/'+ matchedItem.id)}} style={{ cursor:'pointer'}}>\n                  <div><img src={'https://jungyooree.github.io/item' + (parseInt(matchedItem.id) + 1) + '.jpg'} width=\"100%\" /></div>\n                  <div><p>{matchedItem.title}</p></div>\n                </div>\n              : null\n            )\n          })\n\nlet closeBar = ()=>{\n  //최근본상품 지우기\n  localStorage.removeItem('Recent')\n  props.setRecentIds([])\n}\n  return (  \n          arrHtml.length > 0\n          ?\n          <div className = 'RecentItemsBar'>\n           <p className='title'>최근 본 상품 <span style={{ cursor:'pointer'}} onClick = { closeBar }>X</span></p>\n           {arrHtml}\n           </div>\n          :\n          null\n  )\n}\n\n//export default App;\nfunction makeProps(store){\n  return { \n      stateOrderItems : store.reducerOrderItems,\n      stateOrderInfo : store.reducerOrderInfo,\n      stateCart : store.reducerCart,\n  }\n  \n}\n\nexport default connect(makeProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n//======firebase 설정 추가 start======================\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/auth\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCAmifWCds15m0fESERq_aJQl-kIpnWl00\",\n  authDomain: \"lsmall.firebaseapp.com\",\n  projectId: \"lsmall\",\n  storageBucket: \"lsmall.appspot.com\",\n  messagingSenderId: \"956208111491\",\n  appId: \"1:956208111491:web:2a0980ace1108a488860b6\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst storage = firebase.storage();\nconst auth = firebase.auth();\nexport {db , storage, auth}\n//======firebase 설정 추가 End=========================\n\nlet dataCart =  []\nlet dataTemp =  []\nlet orderItems =  []\nlet orderInfo  =  []\nlet reviews  =  []\n\n// let dataCart =  [ {id : 0, name:'오리지널 덴스 후디', quan:1, size:95, price:73700, quanPrice:73700}\n//                 ,{id : 1, name:'오리지널 덴스 맨투맨', quan:1, size:95, price:63700, quanPrice:63700}\n//               ]\n\n// let orderItems =  [ {orderNum: 0, id : 0, name:'오리지널 덴스 후디', quan:1, size:95, quanPrice:73700}\n//                    ,{orderNum: 0, id : 1, name:'오리지널 덴스 맨투맨', quan:1, size:95, quanPrice:63700}\n//                 ]\n\n//let orderInfo =  {orderNum: 0, orderName:'김엘사', tel:'1111-111', address:'서울시 서초구 반포동 서래마을', paied:'N', totPrice:137400, date:'2021-12-12'}\n\nfunction reducerCart(state = dataCart, action) {\n  let arrNew = [...state]\n  let payload = action.payload\n  let matchedData =  payload !== undefined && arrNew.find((x)=> { return  parseInt(x.id) === parseInt(payload.id) && parseInt(x.size) === parseInt(payload.size) })\n\n  // 로그인 상태이면 \n  // 장바구니 변경 상황이 발생하면 무조건 이전 my 장바구니 데이터는 \n  // db에서 먼저 삭제\n  if (auth.currentUser) \n    DelDbByAction(action, arrNew);\n\n  if (action.type === '수량증가') {\n    matchedData.quan++;\n    matchedData.quanPrice = parseInt(matchedData.quan) * parseInt(payload.price)\n\n  }else if (action.type === '수량감소') {\n   if( matchedData.quan >  1)\n    matchedData.quan--;\n    matchedData.quanPrice = parseInt(matchedData.quan) * parseInt(payload.price)\n  }else if (action.type === '삭제') {\n    let arrNewOne = arrNew.filter((x)=>{ return !(x.id == parseInt(payload.id) && x.size == parseInt(payload.size)) })\n    arrNew = arrNewOne\n  }else if (action.type === '장바구니담기') {\n    \n    if(matchedData == undefined){\n      arrNew.push(payload) //추가\n    }\n    else\n    {\n      matchedData.quan++; //같은 아이디가 있으면 quan만 증가 \n      matchedData.quanPrice = parseInt(matchedData.quan) *  parseInt(payload.price)\n    }\n  }else if (action.type === '장바구니초기화') {\n    arrNew = []\n  }else if (action.type === '장바구니초기화디비삭제안함') {\n  arrNew = []\n  }\n  else if (action.type === '장바구니초기값전달') {\n    let payloadNew  = [...payload]\n    return payloadNew\n\n  }\n\n  //----------------------\n  //로그인 상태이면 db 재 저장\n  if (auth.currentUser) \n    AddDbByAction(action, arrNew);\n\n  return arrNew\n\n  function AddDbByAction(action, arrNew) {\n    if (action.type === '수량증가'\n      || action.type === '수량감소'\n      || action.type === '삭제'\n      || action.type === '장바구니담기') {\n      let seq = 0;\n      arrNew.map((obj) => {\n        seq = seq + 1;\n        let code = auth.currentUser.uid + seq;\n        obj['uid'] = auth.currentUser.uid;\n        obj['seq'] = seq;\n        obj['code'] = code;\n\n        //2 db board에 저장\n        db.collection('cart').doc(code).set(obj)\n        .catch((err) => {\n          alert(err);\n          return {};\n        });\n      });\n    }\n  }\n\n  function DelDbByAction(action, arrNew) {\n    if (action.type === '수량증가'\n      || action.type === '수량감소'\n      || action.type === '삭제'\n      || action.type === '장바구니담기'\n      || action.type === '장바구니초기화') {\n        arrNew.map((obj) => {\n        const res = db.collection('cart').doc(obj.code).delete();\n      });\n    }\n  }\n}\n\nfunction reducerTemp(state = dataTemp, action) {\n  let arrNew = [...state]\n  let payload = action.payload\n \n  if (action.type === '임시주문') {\n    arrNew.push(payload) //추가\n    return arrNew\n  }\n  else if (action.type === '임시주문초기화') {\n    arrNew = []\n    return arrNew\n  }\n  else{\n    return state\n  }\n}\n\nfunction reducerOrderItems(state = orderItems, action) {\n  let arrNew = [...state]\n  let payload = action.payload\n  let orderNum = action.orderNum\n  let uid = action.uid\n \n  if (action.type === '주문상품저장') {\n      payload.map((obj)=>{\n        let docId = orderNum +'_' + obj.id\n\n                            obj['orderNum'] = orderNum\n                            obj['uid'] = uid\n                            obj['isReview'] = false\n                            obj['docId'] = docId\n\n                            //2 db board에 저장\n                            db.collection('orderitems').doc(docId).set(obj).then((result)=>{ // orderitems의 doc의 코드 조합 = orderNum + '_' id(상품)                             \n                              //3 db 저장 성공하면  state에 저장\n                              arrNew.push(obj)\n                          \n                              }).catch((err)=>{\n                                alert(err)\n                                return {}\n                              })\n      })\n\n     return arrNew\n  }\n  else if (action.type === '주문상품초기화') {\n    return payload;\n  }\n  else if (action.type === '업데이트_리뷰작성여부'){\n\n    let docId =  payload.orderNum +'_' + payload.id\n    let matchedData =  arrNew.find((x)=> { return  x.docId === docId  })\n\n    if (!matchedData)\n    return state\n\n    //state 변경\n    matchedData.isReview = true\n\n\n      db.collection('orderitems').doc(docId).update({isReview: true})\n      .then(() => {\n        console.log(\"Document successfully updated!\");\n    })\n    .catch((error) => {\n        // The document probably doesn't exist.\n        console.error(\"Error updating document: \", error);\n    });\n\n  \n      return state\n  }\n  else{\n    return state\n  }\n}\n\nfunction reducerOrderInfo(state = orderInfo, action) {\n  //let arrNew = [...state]\n  let arrNew = []\n  let payload = action.payload\n\n  let seq = 0;\n\n  if (action.type === '주문정보저장') {\n    arrNew = [...state]\n\n    //seq 따기\n    //마지막 state의 seq에서 +1 해서\n    //조건 : 1) arrNew.length 가 0 이거너 undefined  이면 1\n            //2) else 이면  가장큰 seq +1\n    if( arrNew.length === 0 || arrNew.undefined)\n      seq =1;\n    else {\n        //가장 큰 seq +1\n      let seqMax = 0\n      arrNew.map((x)=>{ if (x.seq >  seqMax) seqMax = x.seq;})\n\n      seq = seqMax + 1;\n    } \n\n    payload.seq = seq \n\n    //2 db board에 저장\n    db.collection('orderinfo').doc(payload.orderNum).set(payload).then((result)=>{\n    \n    //3 db 저장 성공하면  state에 저장\n    arrNew.push(payload) //추가\n\n    }).catch((err)=>{\n      alert(err)\n      return {}\n    })\n    return arrNew\n  }\n  else if (action.type === '주문정보초기화') {\n    return payload;\n  }\n  else{\n    return state\n  }\n}\n\nconst getSeqMax =(arrNew)=>{\n  let seq = 0\n\n  if( arrNew.length === 0 || arrNew.undefined)\n    seq =1;\n  else {\n      //가장 큰 seq +1\n    let seqMax = 0\n    arrNew.map((x)=>{ if (x.seq >  seqMax) seqMax = x.seq;})\n\n    seq = seqMax + 1;\n  } \n\n  return seq \n}\n\nfunction reducerReview(state = reviews, action) {\n   let arrNew = []\n   let payload = action.payload\n \n   if (action.type === '리뷰정보저장') {\n     arrNew = [...state]\n     payload.seq = getSeqMax(arrNew) \n     arrNew.push(payload) //추가\n    \n     //2 db board에 저장\n     db.collection('review').add(payload)\n     .catch((err)=>{\n        alert(err)\n        return {}\n     })\n     return arrNew\n   }\n   else if (action.type === '리뷰정보초기화') {\n     return payload;\n   }\n   else{\n     return state\n   }\n }\n\nlet store = createStore(combineReducers({ reducerCart\n                                          , reducerTemp\n                                          , reducerOrderItems\n                                          , reducerOrderInfo\n                                          , reducerReview\n                                        }))\n\n                                 \nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}